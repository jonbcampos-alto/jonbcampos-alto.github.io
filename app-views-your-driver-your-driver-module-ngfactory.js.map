{"version":3,"sources":["webpack:///./src/app/views/your-driver/your-driver.component.html","webpack:///./src/app/views/your-driver/your-driver.component.ts","webpack:///./src/app/views/your-driver/your-driver.guard.ts","webpack:///./src/app/views/your-driver/your-driver.module.ts","webpack:///./src/app/views/your-driver/your-driver.routing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGAAA,6NAE6B,YADxB;;wBAAyB;MACzB;;wBAAuB;MAF5B,wBAE6B,KAE3B,oJAA8B,KAC5B,2IAAqB,KAErB,wIAAkB,KAChB,6JAAuC,KAI3C,4IAAqB,KACnB,yIAAmB,wFAAW,MAE9B,gJAA0B,kFAAK,MAE/B,+IAAwB,KACtB,sHAAG,4OAKH,MAGF,qJAA8B,KAC5B,o6BACiC,yFAEjC,MAMN,uJAAgC,KAC9B,ooBAAgC,iDAVD,kBAAQ,EAAnC,aACiC,EADN,SAAQ,GAUvB,mBAAe,QAA/B,aAAgC,EAAhB,SAAe,2BAV3B,oPACiC;;;;;;;;;;;;;;;;AC5BvC;AAAA;AAAA;AAAA;AAAgD;AACT;AAEvC;IAgBE;;OAEG;IACH,6BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAVlC,UAAK,GAAkB;YACrB,YAAY;YACZ,cAAc;YACd,eAAe;YACf,mBAAmB;SACpB,CAAC;IAMF,CAAC;IAED;;;OAGG;IACH,sCAAQ,GAAR;IACA,CAAC;IAED,qCAAO,GAAP,UAAQ,KAAK;QACX,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;YACzB,OAAO;SACR;aAAM,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;YAChC,QAAQ;SACT;aAAM,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;YAChC,KAAK;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;aAAM,IAAI,KAAK,CAAC,SAAS,KAAK,EAAE,EAAE;YACjC,OAAO;YACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAEH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;IAAA;IAiBA,CAAC;IAXG;;;;;OAKG;IACH,qCAAW,GAAX,UACI,IAA4B,EAC5B,KAA0B;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAAA;IAYA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAqD;AACO;AACR;AAEpD;;GAEG;AACH,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAmB;QAC9B,WAAW,EAAE,CAAC,kEAAe,CAAC;KACjC;CACJ,CAAC;AAEF;IAAA;IAQA,CAAC;IAAD,8BAAC;AAAD,CAAC","file":"app-views-your-driver-your-driver-module-ngfactory.js","sourcesContent":["<div class=\"your-driver-container\"\n     (swipe)=\"onSwipe($event)\"\n     (pan)=\"onSwipe($event)\">\n\n  <div class=\"header-container\">\n    <div class=\"profile\">\n    </div>\n    <div class=\"logo\">\n      <img src=\"assets/images/Alto_logo.png\">\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <h1 class=\"header\">Your Driver</h1>\n\n    <h2 class=\"driver-header\">Steph</h2>\n\n    <div class=\"driver-bio\">\n      <p>\n        Steph Festiculma is a graduate of Parsons New School\n        in New York and fluent in Portugeuse,\n        Spanish, and English. Steph has been driving with\n        Alto since 2018.\n      </p>\n    </div>\n\n    <div class=\"button-container\">\n      <button mat-stroked-button disabled\n              class=\"important-button\">\n        Contact Driver\n      </button>\n    </div>\n\n  </div>\n</div>\n\n<div class=\"floating-indicator\">\n  <page-indicator [links]=\"pages\"></page-indicator>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  templateUrl: './your-driver.component.html',\n  styleUrls: ['./your-driver.component.css']\n})\n/**\n * Blank view.\n */\nexport class YourDriverComponent implements OnInit {\n\n  pages: Array<string> = [\n    '/your-trip',\n    '/your-driver',\n    '/your-vehicle',\n    '/your-destination'\n  ];\n\n  /**\n   * Component constructor and DI injection point.\n   */\n  constructor(private router: Router) {\n  }\n\n  /**\n   * Called part of the component lifecycle. Best first\n   * place to start adding your code.\n   */\n  ngOnInit() {\n  }\n\n  onSwipe(event) {\n    if (event.direction === 2) {\n      // left\n    } else if (event.direction === 4) {\n      // right\n    } else if (event.direction === 8) {\n      // up\n      this.router.navigate(['your-trip']);\n    } else if (event.direction === 16) {\n      // down\n      this.router.navigate(['your-vehicle']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {Observable} from 'rxjs/internal/Observable';\n\n@Injectable()\n/**\n * Blank view guard for view access and data preloading.\n */\nexport class YourDriverGuard implements CanActivate {\n\n    /**\n     * Method to determine if we can activate the view based on custom logic.\n     * @param {ActivatedRouteSnapshot} next\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<boolean> | Promise<boolean> | boolean}\n     */\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        return true;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {SharedModule} from 'src/app/shared/shared.module';\nimport {YourDriverComponent} from './your-driver.component';\nimport {YourDriverGuard} from './your-driver.guard';\nimport {YourDriverRoutingModule} from './your-driver.routing.module';\n\n\n\n@NgModule({\n    declarations: [\n        YourDriverComponent,\n    ],\n    imports: [\n        SharedModule,\n        YourDriverRoutingModule\n    ],\n    providers: [YourDriverGuard]\n})\n\nexport class YourDriverModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {YourDriverComponent} from './your-driver.component';\nimport {YourDriverGuard} from './your-driver.guard';\n\n/**\n * Adjust module routing here.\n */\nconst routes: Routes = [\n    {\n        path: '',\n        component: YourDriverComponent,\n        canActivate: [YourDriverGuard]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\n\nexport class YourDriverRoutingModule {\n}\n"],"sourceRoot":""}